version: '3.8'
services:
  frontend:
    build: 
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "5001:5173"
    volumes:
      - ./client/dist:/usr/share/nginx/html  # React build dosyalarını Nginx konteynerine bağla

  backend:
    build: 
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./server:/app
      - /app/node_modules
    working_dir: /app

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"  # Nginx'i 80 portundan dış dünyaya aç
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf  # Nginx yapılandırma dosyasını bağla
      - ./client/dist:/usr/share/nginx/html  # React build dosyalarını Nginx konteynerine bağla
    depends_on:
      - frontend  # Nginx, frontend servisi build edildikten sonra başlatılır

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
      - redis-data:/data
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]

  rabbitmq:
    image: "rabbitmq:3-management-alpine"  # Management plugin ile RabbitMQ
    hostname: "rabbitmq" # network içinde hostname ile erişilir
    environment: # çalışma ortamı için gerkli ayarlar  kullanıcı adı şifre gibi
      - RABBITMQ_ERLANG_COOKIE=key123   # Güvenlik için Erlang cookie env dosyasından getiriliyor
      - RABBITMQ_DEFAULT_USER=user  # Varsayılan kullanıcı adı
      - RABBITMQ_DEFAULT_PASS=password  # Varsayılan şifre
    ports:
      - "15672:15672"  # Management UI için port
      - "5672:5672"    # Uygulamalar için AMQP portu
    volumes:
      - "rabbitmq-data:/var/lib/rabbitmq"  # RabbitMQ veri dizini
    labels:
      - "SERVICE_80_NAME=rabbitmq-management"  # Traefik için etiket (opsiyonel) 
    command: ["rabbitmq-server"] 
    #command: ["rabbitmq-server", "-detached", "&&", "rabbitmq-plugins", "enable", "rabbitmq_management"]

volumes:
  redis-data:
  rabbitmq-data:
