apiVersion: v1
kind: ServiceAccount #oluşturulan obje serviceAccount türünde olur bu sayede Role-Based Access Control (RBAC) kullanarak bir servis hesabına yönetici yetkileri vermeyi amaçlar
metadata: # serviceAccount ile ilgili bilgiler burada ayarlanır
  name: admin-user # Service Account'ın adıdır.
  namespace: kubernetes-dashboard # bu namespace ile olultutulran serviceAccoutnun kullanıcılarını sadece kubernets-dashborad olan yapılarla kısıtlıyor namespace alanı farklı olanlara etki etmiyor
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user
roleRef:
  apiGroup: rbac.authorization.k8s.io #  Hangi API grubuna bağlı olduğunu belirtir
  kind: ClusterRole # Atanacak rolün türü, burada ClusterRole
  name: cluster-admin # Atanacak rolün adı, burada cluster-admin. Bu rol, Kubernetes cluster'ındaki tüm kaynaklara tam erişim sağlayan en geniş yetkilere sahiptir.
subjects:
- kind: ServiceAccount # hangi türde bir objeye rol atanacağını belirtir, burada ServiceAccount
  name: admin-user # Rolün atanacağı objenin adı, burada admin-user.
  namespace: kubernetes-dashboard # Rolün atanacağı objenin namespace'i, burada kubernetes-dashboard
